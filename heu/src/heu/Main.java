/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package heu;

import java.awt.Component;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import org.graphstream.algorithm.Dijkstra;
import org.graphstream.graph.Graph;
import org.graphstream.graph.Path;
import org.graphstream.graph.implementations.SingleGraph;
import org.graphstream.ui.view.View;
import org.graphstream.ui.view.Viewer;

/**
 *
 * @author felix
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();

        cargar();

        Viewer viewer = grafo.display(true);
        View view = viewer.getDefaultView();
        mostrar_grafo.add((Component) view);

        String s = "";

        s = "org.jb2011.lnf.beautyeye.BeautyEyeLookAndFeelCross";

        try {
            javax.swing.UIManager.setLookAndFeel(s);
            SwingUtilities.updateComponentTreeUI(this);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    datos guardados;

    ArrayList<complejo_h> complejos = new ArrayList();
    ArrayList<paramedicos> paramedico = new ArrayList();
    ArrayList<ambulancias> ambulancia = new ArrayList();
    ArrayList<domicilio> domicilios = new ArrayList();
    Graph grafo = new SingleGraph("Mapa");
    int bandera = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        elegir_complejo = new javax.swing.JDialog();
        jScrollPane5 = new javax.swing.JScrollPane();
        elegir_c = new javax.swing.JTable();
        bt_cambiar = new javax.swing.JButton();
        mostrar_grafo = new javax.swing.JDialog();
        administrar_emergencia = new javax.swing.JDialog();
        ranking_emergencia = new javax.swing.JComboBox();
        domicilios_emergencia = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nombre_complejo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        c_paramedicos = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        direccion_complejo = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        c_ambulancias = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        emergencias_complejo = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_complejos = new javax.swing.JTable();
        eliminar_c = new javax.swing.JButton();
        agregar_c = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nombre_p = new javax.swing.JTextField();
        id_p = new javax.swing.JTextField();
        edad_p = new javax.swing.JSpinner();
        agregar_p = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla_p = new javax.swing.JTable();
        eliminar_p = new javax.swing.JButton();
        transferir_p = new javax.swing.JButton();
        ranking_p = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        complejo_p = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        placa_a = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        year_a = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        velocidad_a = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        complejo_a = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        agregar_a = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabla_a = new javax.swing.JTable();
        eliminar_a = new javax.swing.JButton();
        transferir_a = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        mapear_c = new javax.swing.JComboBox();
        agregar_cm = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        nombre_d = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        direccion_d = new javax.swing.JTextArea();
        agregar_d = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        complejos_arista = new javax.swing.JComboBox();
        distancia_arista = new javax.swing.JSpinner();
        domicilio_arista = new javax.swing.JComboBox();
        agregar_arista = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        elegir_c.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "C.Paramedico", "C.Ambulancias", "Ranking"
            }
        ));
        jScrollPane5.setViewportView(elegir_c);

        bt_cambiar.setText("Aceptar");
        bt_cambiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_cambiarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout elegir_complejoLayout = new javax.swing.GroupLayout(elegir_complejo.getContentPane());
        elegir_complejo.getContentPane().setLayout(elegir_complejoLayout);
        elegir_complejoLayout.setHorizontalGroup(
            elegir_complejoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(elegir_complejoLayout.createSequentialGroup()
                .addGap(213, 213, 213)
                .addComponent(bt_cambiar)
                .addContainerGap(240, Short.MAX_VALUE))
            .addGroup(elegir_complejoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, elegir_complejoLayout.createSequentialGroup()
                    .addContainerGap(36, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(36, Short.MAX_VALUE)))
        );
        elegir_complejoLayout.setVerticalGroup(
            elegir_complejoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, elegir_complejoLayout.createSequentialGroup()
                .addContainerGap(389, Short.MAX_VALUE)
                .addComponent(bt_cambiar)
                .addGap(58, 58, 58))
            .addGroup(elegir_complejoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, elegir_complejoLayout.createSequentialGroup()
                    .addContainerGap(21, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(130, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout mostrar_grafoLayout = new javax.swing.GroupLayout(mostrar_grafo.getContentPane());
        mostrar_grafo.getContentPane().setLayout(mostrar_grafoLayout);
        mostrar_grafoLayout.setHorizontalGroup(
            mostrar_grafoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 820, Short.MAX_VALUE)
        );
        mostrar_grafoLayout.setVerticalGroup(
            mostrar_grafoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 564, Short.MAX_VALUE)
        );

        ranking_emergencia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "C", "D" }));

        jButton3.setText("Aceptar");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout administrar_emergenciaLayout = new javax.swing.GroupLayout(administrar_emergencia.getContentPane());
        administrar_emergencia.getContentPane().setLayout(administrar_emergenciaLayout);
        administrar_emergenciaLayout.setHorizontalGroup(
            administrar_emergenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(administrar_emergenciaLayout.createSequentialGroup()
                .addGroup(administrar_emergenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(administrar_emergenciaLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(ranking_emergencia, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(domicilios_emergencia, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(administrar_emergenciaLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jButton3)))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        administrar_emergenciaLayout.setVerticalGroup(
            administrar_emergenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(administrar_emergenciaLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(administrar_emergenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ranking_emergencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(domicilios_emergencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addComponent(jButton3)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(new org.edisoncor.gui.util.DropShadowBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Nombre");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 37, -1, -1));
        jPanel1.add(nombre_complejo, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 34, 166, -1));

        jLabel2.setText("Direccion");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 86, -1, -1));

        jLabel3.setText("Capacidad de Paramedicos");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 221, -1, -1));

        c_paramedicos.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        jPanel1.add(c_paramedicos, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 218, 61, -1));

        direccion_complejo.setColumns(20);
        direccion_complejo.setRows(5);
        jScrollPane1.setViewportView(direccion_complejo);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 86, -1, -1));

        jLabel4.setText("Capacidad de Ambulancias ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 273, -1, -1));

        c_ambulancias.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        jPanel1.add(c_ambulancias, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 254, 61, -1));

        jLabel5.setText("Ranking de Emergencias");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 321, -1, -1));

        emergencias_complejo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "C", "D" }));
        jPanel1.add(emergencias_complejo, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 318, 61, -1));

        tabla_complejos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "C.Paramedico", "C.Ambulancias", "Ranking"
            }
        ));
        jScrollPane2.setViewportView(tabla_complejos);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, 438, 195));

        eliminar_c.setText("Eliminar");
        eliminar_c.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eliminar_cMouseClicked(evt);
            }
        });
        jPanel1.add(eliminar_c, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 250, -1, -1));

        agregar_c.setText("Agregar");
        agregar_c.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agregar_cMouseClicked(evt);
            }
        });
        jPanel1.add(agregar_c, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, -1, -1));

        jTabbedPane1.addTab("Complejo", jPanel1);

        jPanel2.setBorder(new org.edisoncor.gui.util.DropShadowBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setText("Nombre");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 45, -1, -1));

        jLabel7.setText("Edad");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 83, -1, -1));

        jLabel8.setText("ID");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 121, -1, -1));

        jLabel9.setText("Ranking");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 159, -1, -1));
        jPanel2.add(nombre_p, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 42, 140, -1));
        jPanel2.add(id_p, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 118, 140, -1));

        edad_p.setModel(new javax.swing.SpinnerNumberModel(18, 18, 75, 1));
        jPanel2.add(edad_p, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 80, 56, -1));

        agregar_p.setText("Agregar");
        agregar_p.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agregar_pMouseClicked(evt);
            }
        });
        jPanel2.add(agregar_p, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 328, -1, -1));

        tabla_p.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Edad", "Ranking", "Complejo"
            }
        ));
        jScrollPane3.setViewportView(tabla_p);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(332, 28, -1, 148));

        eliminar_p.setText("Eliminar");
        eliminar_p.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eliminar_pMouseClicked(evt);
            }
        });
        jPanel2.add(eliminar_p, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 220, 77, -1));

        transferir_p.setText("Transferir");
        transferir_p.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                transferir_pMouseClicked(evt);
            }
        });
        jPanel2.add(transferir_p, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 220, -1, -1));

        ranking_p.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "C", "D" }));
        jPanel2.add(ranking_p, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 156, 56, -1));

        jLabel10.setText("Complejo Hospitalario");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 204, -1, -1));

        jPanel2.add(complejo_p, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 244, 141, -1));

        jTabbedPane1.addTab("Paramedicos", jPanel2);

        jPanel3.setBorder(new org.edisoncor.gui.util.DropShadowBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setText("Numero de Placa");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 46, -1, -1));
        jPanel3.add(placa_a, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 141, -1));

        jLabel12.setText("Año del vehiculo");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 93, -1, -1));

        year_a.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1990), Integer.valueOf(1990), null, Integer.valueOf(1)));
        jPanel3.add(year_a, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, -1, -1));

        jLabel13.setText("Velocidad Maxima");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 152, -1, -1));

        velocidad_a.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(70), Integer.valueOf(40), null, Integer.valueOf(1)));
        jPanel3.add(velocidad_a, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 63, -1));

        jLabel14.setText("Kmph");
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 152, -1, -1));

        jPanel3.add(complejo_a, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 235, 143, -1));

        jLabel15.setText("Complejo Hospitalario");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 198, -1, -1));

        agregar_a.setText("Agregar");
        agregar_a.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agregar_aMouseClicked(evt);
            }
        });
        jPanel3.add(agregar_a, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, -1, -1));

        tabla_a.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero de Placa", "Año del Vehiculo", "Velocidad Maxima", "Complejo Hospitalario"
            }
        ));
        jScrollPane4.setViewportView(tabla_a);

        jPanel3.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, -1, 143));

        eliminar_a.setText("Eliminar");
        eliminar_a.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eliminar_aMouseClicked(evt);
            }
        });
        jPanel3.add(eliminar_a, new org.netbeans.lib.awtextra.AbsoluteConstraints(696, 194, -1, -1));

        transferir_a.setText("Transferir");
        transferir_a.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                transferir_aMouseClicked(evt);
            }
        });
        jPanel3.add(transferir_a, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 194, -1, -1));

        jTabbedPane1.addTab("Ambulancias", jPanel3);

        jPanel4.setBorder(new org.edisoncor.gui.util.DropShadowBorder());
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.add(mapear_c, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 110, -1));

        agregar_cm.setText("Agregar al Mapa");
        agregar_cm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agregar_cmMouseClicked(evt);
            }
        });
        jPanel4.add(agregar_cm, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, -1, -1));

        jButton1.setText("Ver Mapa");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jPanel4.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 360, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("Domicilios");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel17.setText("Nombre");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));
        jPanel4.add(nombre_d, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, 140, -1));

        jLabel18.setText("Direccion");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, -1));

        direccion_d.setColumns(20);
        direccion_d.setRows(5);
        jScrollPane6.setViewportView(direccion_d);

        jPanel4.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 140, -1));

        agregar_d.setText("Agregar");
        agregar_d.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agregar_dMouseClicked(evt);
            }
        });
        jPanel4.add(agregar_d, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 340, -1, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel19.setText("Agregar Rutas");
        jPanel4.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 110, -1, -1));

        jPanel4.add(complejos_arista, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 170, 90, -1));

        distancia_arista.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        jPanel4.add(distancia_arista, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 170, 60, -1));

        jPanel4.add(domicilio_arista, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 170, 110, -1));

        agregar_arista.setText("Agregar");
        agregar_arista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agregar_aristaMouseClicked(evt);
            }
        });
        jPanel4.add(agregar_arista, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 230, -1, -1));

        jButton2.setText("Emergencias");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 360, -1, -1));

        jTabbedPane1.addTab("Mapa", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 844, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void guardar() {
        guardados = new datos();
        guardados.setAmbulancia(ambulancia);
        guardados.setComplejos(complejos);
        guardados.setParamedico(paramedico);

        try {
            File archivo = null;
            try {
                archivo = new File("./Datos.fms");
                FileOutputStream fo = new FileOutputStream(archivo);
                ObjectOutputStream os = new ObjectOutputStream(fo);
                os.writeObject(guardados);
                os.close();
                fo.close();
            } catch (Exception ex) {

            }
        } catch (Exception ex) {

        }
    }

    private void cargar() {
        try {
            File archivo = null;
            try {
                archivo = new File("./Datos.fms");
                FileInputStream fi = new FileInputStream(archivo);
                ObjectInputStream oi = new ObjectInputStream(fi);
                guardados = (datos) oi.readObject();

                complejos = guardados.getComplejos();
                paramedico = guardados.getParamedico();
                ambulancia = guardados.getAmbulancia();

                DefaultTableModel m = (DefaultTableModel) tabla_complejos.getModel();
                DefaultTableModel z = (DefaultTableModel) elegir_c.getModel();
                DefaultTableModel n = (DefaultTableModel) tabla_p.getModel();
                DefaultTableModel c = (DefaultTableModel) tabla_a.getModel();
                for (int i = 0; i < complejos.size(); i++) {
                    Object[] row = {complejos.get(i).nombre, complejos.get(i).capacidad_p, complejos.get(i).capacidad_a, complejos.get(i).ranking};
                    complejo_p.addItem(complejos.get(i).nombre);
                    complejo_a.addItem(complejos.get(i).nombre);
                    mapear_c.addItem(complejos.get(i).nombre);
                    complejos_arista.addItem(complejos.get(i).nombre);
                    m.addRow(row);
                    z.addRow(row);
                }
                for (int i = 0; i < paramedico.size(); i++) {
                    Object[] row = {paramedico.get(i).nombre, paramedico.get(i).edad, paramedico.get(i).ranking, paramedico.get(i).complejo};
                    n.addRow(row);
                }
                for (int i = 0; i < ambulancia.size(); i++) {
                    Object[] row = {ambulancia.get(i).placa, ambulancia.get(i).año, ambulancia.get(i).max_km, ambulancia.get(i).complejo};
                    c.addRow(row);
                }

            } catch (Exception ex) {

            }
        } catch (Exception ex) {
        }
    }
    private void agregar_cMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregar_cMouseClicked
        if (!nombre_complejo.getText().equals("") && !direccion_complejo.getText().equals("")) {
            String nombre = nombre_complejo.getText(), direccion = direccion_complejo.getText();
            int capacidad_p = Integer.parseInt(c_paramedicos.getValue().toString()), capacidad_a = Integer.parseInt(c_ambulancias.getValue().toString());
            char ranking = emergencias_complejo.getSelectedItem().toString().charAt(0);

            complejos.add(new complejo_h(nombre, direccion, capacidad_p, capacidad_a, ranking));
            complejo_p.addItem(nombre);
            complejo_a.addItem(nombre);
            mapear_c.addItem(nombre);
            complejos_arista.addItem(nombre);
            DefaultTableModel m = (DefaultTableModel) tabla_complejos.getModel();
            DefaultTableModel n = (DefaultTableModel) elegir_c.getModel();
            String[] row = {nombre, Integer.toString(capacidad_p), Integer.toString(capacidad_a), Character.toString(ranking)};
            String[] row2 = {nombre, Integer.toString(capacidad_p), Integer.toString(capacidad_a), Character.toString(ranking)};
            m.addRow(row);
            n.addRow(row2);
            nombre_complejo.setText("");
            direccion_complejo.setText("");
            c_paramedicos.setValue(1);
            c_ambulancias.setValue(1);
            emergencias_complejo.setSelectedIndex(0);
            JOptionPane.showMessageDialog(this, "Se ha agregado un complejo hospitalario exitosamente");
        } else {
            JOptionPane.showMessageDialog(this, "ERROR! Hay campos vacios!");
        }
    }//GEN-LAST:event_agregar_cMouseClicked

    private void eliminar_cMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminar_cMouseClicked
        if (tabla_complejos.getSelectedRow() >= 0) {
            int opcion = JOptionPane.showConfirmDialog(this, "¿Seguro que desea eliminar este complejo?");
            if (opcion == 0) {
                DefaultTableModel m = (DefaultTableModel) tabla_complejos.getModel();
                DefaultTableModel n = (DefaultTableModel) elegir_c.getModel();
                
                int r = tabla_complejos.getSelectedRow();
                
                for (int i = 0; i < ambulancia.size(); i++) {
                    if (ambulancia.get(i).complejo.equals(complejos.get(r).nombre)) {
                        ambulancia.get(i).setComplejo("Sin Complejo");
                    }
                }
                for (int i = 0; i < paramedico.size(); i++) {
                    if (paramedico.get(i).complejo.equals(complejos.get(r).nombre)) {
                        paramedico.get(i).setComplejo("Sin Complejo");
                    }
                }
                complejos.remove(tabla_complejos.getSelectedRow());
                complejo_p.removeItemAt(tabla_complejos.getSelectedRow());
                complejo_a.removeItemAt(tabla_complejos.getSelectedRow());
                complejos_arista.removeItemAt(tabla_complejos.getSelectedRow());
                mapear_c.removeItemAt(tabla_complejos.getSelectedRow());
                actualizar_ambulancia();
                actualizar_paramedico();
                n.removeRow(r);
                m.removeRow(r);

            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona una fila por favor");
        }
    }//GEN-LAST:event_eliminar_cMouseClicked

    private void agregar_pMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregar_pMouseClicked
        if (!nombre_p.getText().equals("") && !id_p.getText().equals("")) {
            if (complejos.isEmpty()) {
                JOptionPane.showMessageDialog(this, "ERROR! No has asignado un complejo hospitalario");
            } else {
                String nombre = nombre_p.getText(), ID = id_p.getText();
                int edad = Integer.parseInt(edad_p.getValue().toString());
                char ranking = ranking_p.getSelectedItem().toString().charAt(0);
                String complejo = complejo_p.getSelectedItem().toString();
                paramedico.add(new paramedicos(nombre, ID, edad, ranking, complejo));

                DefaultTableModel m = (DefaultTableModel) tabla_p.getModel();
                String[] row = {nombre, Integer.toString(edad), Character.toString(ranking), complejo};
                m.addRow(row);

                nombre_p.setText("");
                id_p.setText("");
                edad_p.setValue(18);
                ranking_p.setSelectedIndex(0);
                complejo_p.setSelectedIndex(0);
                JOptionPane.showMessageDialog(this, "Se ha agregado un paramedico exitosamente");
            }
        } else {
            JOptionPane.showMessageDialog(this, "ERROR! Hay campos vacios!");
        }
    }//GEN-LAST:event_agregar_pMouseClicked

    private void eliminar_pMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminar_pMouseClicked
        if (tabla_p.getSelectedRow() >= 0) {
            int opcion = JOptionPane.showConfirmDialog(this, "¿Seguro que desea eliminar este paramedico?");
            if (opcion == 0) {
                DefaultTableModel m = (DefaultTableModel) tabla_p.getModel();
                paramedico.remove(tabla_p.getSelectedRow());
                m.removeRow(tabla_p.getSelectedRow());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona una fila por favor");
        }
    }//GEN-LAST:event_eliminar_pMouseClicked

    private void eliminar_aMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminar_aMouseClicked
        if (tabla_a.getSelectedRow() >= 0) {
            int opcion = JOptionPane.showConfirmDialog(this, "¿Seguro que desea eliminar este paramedico?");
            if (opcion == 0) {
                DefaultTableModel m = (DefaultTableModel) tabla_a.getModel();
                ambulancia.remove(tabla_a.getSelectedRow());
                m.removeRow(tabla_a.getSelectedRow());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona una fila por favor");
        }
    }//GEN-LAST:event_eliminar_aMouseClicked

    private void agregar_aMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregar_aMouseClicked
        if (!placa_a.getText().equals("")) {
            if (complejos.isEmpty()) {
                JOptionPane.showMessageDialog(this, "ERROR! No has asignado un complejo hospitalario");
            } else {
                String placa = placa_a.getText();
                int año = Integer.parseInt(year_a.getValue().toString()), max_km = Integer.parseInt(velocidad_a.getValue().toString());

                String complejo = complejo_a.getSelectedItem().toString();

                ambulancia.add(new ambulancias(placa, complejo, año, max_km));

                DefaultTableModel m = (DefaultTableModel) tabla_a.getModel();
                String[] row = {placa, Integer.toString(año), Integer.toString(max_km), complejo};
                m.addRow(row);

                placa_a.setText("");

                year_a.setValue(1990);
                velocidad_a.setValue(70);
                complejo_p.setSelectedIndex(0);
                JOptionPane.showMessageDialog(this, "Se ha agregado una ambulancia exitosamente");
            }
        } else {
            JOptionPane.showMessageDialog(this, "ERROR! Hay campos vacios!");
        }
    }//GEN-LAST:event_agregar_aMouseClicked

    private void transferir_pMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transferir_pMouseClicked
        if (tabla_p.getSelectedRow() >= 0) {
            bandera = 0;
            elegir_complejo.pack();
            elegir_complejo.setLocationRelativeTo(this);
            elegir_complejo.setModal(true);
            elegir_complejo.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(this, "Selecciona una fila por favor");
        }
    }//GEN-LAST:event_transferir_pMouseClicked

    private void transferir_aMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transferir_aMouseClicked
        if (tabla_a.getSelectedRow() >= 0) {
            bandera = 1;
            elegir_complejo.pack();
            elegir_complejo.setLocationRelativeTo(this);
            elegir_complejo.setModal(true);
            elegir_complejo.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(this, "Selecciona una fila por favor");
        }
    }//GEN-LAST:event_transferir_aMouseClicked
    public void actualizar_paramedico() {
        DefaultTableModel m = (DefaultTableModel) tabla_p.getModel();
        for (int i = 0; i < paramedico.size(); i++) {
            m.removeRow(0);
        }

        for (int i = 0; i < paramedico.size(); i++) {
            Object[] row = {paramedico.get(i).nombre, paramedico.get(i).edad, paramedico.get(i).ranking, paramedico.get(i).complejo};
            m.addRow(row);

        }
        tabla_p.setModel(m);
    }

    public void actualizar_ambulancia() {
        DefaultTableModel m = (DefaultTableModel) tabla_a.getModel();
        for (int i = 0; i < ambulancia.size(); i++) {
            m.removeRow(0);
        }
        for (int i = 0; i < ambulancia.size(); i++) {
            Object[] row = {ambulancia.get(i).placa, ambulancia.get(i).año, ambulancia.get(i).max_km, ambulancia.get(i).complejo};
            m.addRow(row);

        }
        tabla_a.setModel(m);
    }
    private void bt_cambiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_cambiarMouseClicked
        if (elegir_c.getSelectedRow() >= 0) {
            if (bandera == 0) {
                if (!lleno_p(complejos.get(elegir_c.getSelectedRow()).nombre, complejos.get(elegir_c.getSelectedRow()).capacidad_p)) {
                    paramedico.get(tabla_p.getSelectedRow()).setComplejo(complejos.get(elegir_c.getSelectedRow()).nombre);
                    DefaultTableModel m = (DefaultTableModel) tabla_p.getModel();
                    for (int i = 0; i < paramedico.size(); i++) {
                        m.removeRow(0);
                    }

                    for (int i = 0; i < paramedico.size(); i++) {
                        Object[] row = {paramedico.get(i).nombre, paramedico.get(i).edad, paramedico.get(i).ranking, paramedico.get(i).complejo};
                        m.addRow(row);

                    }
                    tabla_p.setModel(m);
                    elegir_complejo.setVisible(false);
                    JOptionPane.showMessageDialog(this, "Transferencia realizada con exito!");
                } else {
                    JOptionPane.showMessageDialog(this, "Este complejo ya esta lleno de paramedicos!");
                }
            } else {
                if (!lleno_a(complejos.get(elegir_c.getSelectedRow()).nombre, complejos.get(elegir_c.getSelectedRow()).capacidad_a)) {
                    ambulancia.get(tabla_a.getSelectedRow()).setComplejo(complejos.get(elegir_c.getSelectedRow()).nombre);
                    DefaultTableModel m = (DefaultTableModel) tabla_a.getModel();
                    for (int i = 0; i < ambulancia.size(); i++) {
                        m.removeRow(0);
                    }
                    for (int i = 0; i < ambulancia.size(); i++) {
                        Object[] row = {ambulancia.get(i).placa, ambulancia.get(i).año, ambulancia.get(i).max_km, ambulancia.get(i).complejo};
                        m.addRow(row);

                    }
                    tabla_a.setModel(m);
                    elegir_complejo.setVisible(false);
                    JOptionPane.showMessageDialog(this, "Transferencia realizada con exito!");
                } else {
                    JOptionPane.showMessageDialog(this, "Este complejo ya esta lleno de ambulancias!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona una fila por favor");
        }
    }//GEN-LAST:event_bt_cambiarMouseClicked

    private void agregar_cmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregar_cmMouseClicked
        if (complejos.size() > 0) {
            try {
                grafo.addNode(complejos.get(mapear_c.getSelectedIndex()).nombre).setAttribute("ui.label", complejos.get(mapear_c.getSelectedIndex()).nombre);
                JOptionPane.showMessageDialog(this, "Se ha agregado un Complejo Hospitalario al mapa");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Ese Complejo ya fue agregado anteriormente");
            }
        } else {
            JOptionPane.showMessageDialog(this, "ERROR! Seleccione un complejo por favor!");
        }

    }//GEN-LAST:event_agregar_cmMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        mostrar_grafo.setLocationRelativeTo(this);
        mostrar_grafo.pack();
        mostrar_grafo.setModal(true);
        mostrar_grafo.setVisible(true);
    }//GEN-LAST:event_jButton1MouseClicked

    private void agregar_dMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregar_dMouseClicked
        if (!nombre_d.getText().equals("") && !direccion_d.getText().equals("")) {
            domicilios.add(new domicilio(nombre_d.getText(), direccion_d.getText()));
            domicilio_arista.addItem(nombre_d.getText());
            domicilios_emergencia.addItem(nombre_d.getText());
            grafo.addNode(nombre_d.getText());
            nombre_d.setText("");
            direccion_d.setText("");
            JOptionPane.showMessageDialog(this, "Domicilio agregado exitosamente");

        } else {
            JOptionPane.showMessageDialog(this, "Hay espacios vacios! no se agrego el domicilio");
        }

    }//GEN-LAST:event_agregar_dMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        guardar();
    }//GEN-LAST:event_formWindowClosing

    private void agregar_aristaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregar_aristaMouseClicked
        if (complejos.size() > 0) {
            if (domicilios.size() > 0) {
                try {
                    double distancia = Double.parseDouble(distancia_arista.getValue().toString());
                    grafo.addEdge(complejos.get(complejos_arista.getSelectedIndex()).nombre + "-" + domicilios.get(domicilio_arista.getSelectedIndex()).nombre, complejos.get(complejos_arista.getSelectedIndex()).nombre, domicilios.get(domicilio_arista.getSelectedIndex()).nombre);
                    grafo.getEdge(complejos.get(complejos_arista.getSelectedIndex()).nombre + "-" + domicilios.get(domicilio_arista.getSelectedIndex()).nombre).setAttribute("ui.label", distancia);
                    System.out.println(grafo.getEdge(complejos.get(complejos_arista.getSelectedIndex()).nombre + "-" + domicilios.get(domicilio_arista.getSelectedIndex()).nombre).getAttribute("ui.label").toString());
                    complejos_arista.setSelectedIndex(0);
                    domicilio_arista.setSelectedIndex(0);
                    distancia_arista.setValue(1);
                    JOptionPane.showMessageDialog(this, "Ruta creada exitosamente");
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "ERROR! Algo ocurrio intentalo de nuevo!");
                }
            } else {
                JOptionPane.showMessageDialog(this, "No hay Domicilio seleccionado");
            }
        } else {
            JOptionPane.showMessageDialog(this, "No hay complejos seleccionados");
        }
    }//GEN-LAST:event_agregar_aristaMouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        this.administrar_emergencia.pack();
        administrar_emergencia.setLocationRelativeTo(this);
        administrar_emergencia.setModal(true);
        administrar_emergencia.setVisible(true);
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        if(domicilios.size() >0){
            ArrayList<complejo_h> c_cumplen = new ArrayList();
            ArrayList valores = new ArrayList();
            for (int i = 0; i < complejos.size(); i++) {
                if (complejos.get(i).ranking == ranking_emergencia.getSelectedItem().toString().charAt(0)) {
                    c_cumplen.add(complejos.get(i));
                }
            }
            
            if (c_cumplen.size()>0) {
                
                for (int i = 0; i < c_cumplen.size(); i++) {
                    int cont_p=0;
                    int cont_a=0;
                    for (int j = 0; j < paramedico.size(); j++) {
                        if (c_cumplen.get(i).nombre.equals(paramedico.get(j).complejo)) {
                            cont_p++;
                        }
                    }
                    for (int j = 0; j < ambulancia.size(); j++) {
                        if (c_cumplen.get(i).nombre.equals(ambulancia.get(j).complejo)) {
                            cont_a++;
                        }
                    }
                    if (cont_p !=3 && cont_a !=1) {
                        c_cumplen.remove(i);
                    }
                }
                Dijkstra dijkstra = new Dijkstra(Dijkstra.Element.EDGE,null,"ui.label");
                dijkstra.init(grafo);
                dijkstra.setSource(grafo.getNode(domicilios_emergencia.getSelectedItem().toString()));
                dijkstra.compute();
                for (int i = 0; i < c_cumplen.size(); i++) {
                    Path camino = dijkstra.getPath(grafo.getNode(c_cumplen.get(i).nombre));
                    double longitud_c = camino.getPathWeight("ui.label");
                    valores.add(longitud_c);
                }
                double minimo = 999999999999999.0;
                int complejo_optimo=0;
                for (int i = 0; i < valores.size(); i++) {
                    if ((double)valores.get(i)< minimo) {
                        minimo = (double)valores.get(i);
                        complejo_optimo = i;
                    }
                }
                ambulancias temp = new ambulancias();
                for (int i = 0; i < ambulancia.size(); i++) {
                    if (complejos.get(complejo_optimo).nombre.equals(ambulancia.get(i).complejo)) {
                        temp = ambulancia.get(i);
                    }
                }
                double time = (minimo / (double)temp.max_km)*2.0;
                Hilo h = new Hilo(time,domicilios_emergencia.getSelectedItem().toString(),true);
                h.run();
                JOptionPane.showMessageDialog(this, "La ambulancia tardo " + time +"hrs"+ " en regresar");
            }else{
            JOptionPane.showMessageDialog(this, "No hay complejos que cumplan los requisitos");
            }
        
        }else{
            JOptionPane.showMessageDialog(this, "No hay domicilio seleccionado");
        }
    }//GEN-LAST:event_jButton3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    public boolean lleno_a(String nombre, int cantidad) {
        int cont = 0;
        for (int i = 0; i < ambulancia.size(); i++) {
            if (ambulancia.get(i).complejo.equals(nombre)) {
                cont++;
                if (cont == cantidad) {
                    return true;
                }
            }
        }
        return false;
    }

    public boolean lleno_p(String nombre, int cantidad) {
        int cont = 0;
        for (int i = 0; i < paramedico.size(); i++) {
            if (paramedico.get(i).complejo.equals(nombre)) {
                cont++;
                if (cont == cantidad) {
                    return true;
                }
            }
        }
        return false;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog administrar_emergencia;
    private javax.swing.JButton agregar_a;
    private javax.swing.JButton agregar_arista;
    private javax.swing.JButton agregar_c;
    private javax.swing.JButton agregar_cm;
    private javax.swing.JButton agregar_d;
    private javax.swing.JButton agregar_p;
    private javax.swing.JButton bt_cambiar;
    private javax.swing.JSpinner c_ambulancias;
    private javax.swing.JSpinner c_paramedicos;
    private javax.swing.JComboBox complejo_a;
    private javax.swing.JComboBox complejo_p;
    private javax.swing.JComboBox complejos_arista;
    private javax.swing.JTextArea direccion_complejo;
    private javax.swing.JTextArea direccion_d;
    private javax.swing.JSpinner distancia_arista;
    private javax.swing.JComboBox domicilio_arista;
    private javax.swing.JComboBox domicilios_emergencia;
    private javax.swing.JSpinner edad_p;
    private javax.swing.JTable elegir_c;
    private javax.swing.JDialog elegir_complejo;
    private javax.swing.JButton eliminar_a;
    private javax.swing.JButton eliminar_c;
    private javax.swing.JButton eliminar_p;
    private javax.swing.JComboBox emergencias_complejo;
    private javax.swing.JTextField id_p;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox mapear_c;
    private javax.swing.JDialog mostrar_grafo;
    private javax.swing.JTextField nombre_complejo;
    private javax.swing.JTextField nombre_d;
    private javax.swing.JTextField nombre_p;
    private javax.swing.JTextField placa_a;
    private javax.swing.JComboBox ranking_emergencia;
    private javax.swing.JComboBox ranking_p;
    private javax.swing.JTable tabla_a;
    private javax.swing.JTable tabla_complejos;
    private javax.swing.JTable tabla_p;
    private javax.swing.JButton transferir_a;
    private javax.swing.JButton transferir_p;
    private javax.swing.JSpinner velocidad_a;
    private javax.swing.JSpinner year_a;
    // End of variables declaration//GEN-END:variables
}
